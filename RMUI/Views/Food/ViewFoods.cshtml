@model IEnumerable<RMUI.Models.FoodDisplayModel>

@{
    ViewData["Title"] = "View Foods";
}

<h1>Foods</h1>

<p>
    <a asp-action="InsertFood">Create New Food</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditFood", new { id = item.Id }) |
                @if (!item.IsBlocked)
                    @Html.ActionLink("Block", "BlockFood", new { id = item.Id, status = true })
                @if (item.IsBlocked)
                    @Html.ActionLink("Unblock", "BlockFood", new { id = item.Id, status = false })

                |
                @if (!item.IsPromo)
                    @Html.ActionLink("Start promotion", "PromoFood", new { id = item.Id, status = true }) 
                @if (item.IsPromo)
                    @Html.ActionLink("End promotion", "PromoFood", new { id = item.Id, status = false }) 
                |

                @Html.ActionLink("Delete", "DeleteFood", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
